openapi: 3.0.3
info:
  title: Endpoint of EX Bank
  version: v1
paths:
  /users:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: user created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "409":
          description: user already exist
    get:
      tags:
        - user
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML
      responses:
        "200":
          description: A JSON array of user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "204":
          description: no users found

  /users/{id}:
    put:
      tags:
        - user
      summary: Update User
      operationId: updateUser
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric Id of User
      requestBody:
        description: Updated user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

      responses:
        "201":
          description: User is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "204":
          description: user not found
    delete:
      tags:
        - user
      summary: Delete User
      operationId: deleteUser
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric Id of User
      responses:
        "200":
          description: user deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "204":
          description: user not found

  /users/findByName:
    get:
      tags:
        - user
      parameters:
        - in: query
          name: firstName
          schema:
            type: string
            example: 'John'
          required: true
        - in: query
          name: lastName
          schema:
            type: string
            example: 'James'
          required: true
      responses:
        "200":
          description: user exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "204":
          description: user not found

  /users/role:
    get:
      tags:
        - user
      parameters:
        - in: query
          name: role
          required: true
          schema:
            $ref: '#/components/schemas/Role'
      responses:
        "200":
          description: user exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "204":
          description: user not found

  /users/{id}/accounts:
    post:
      tags:
        - account
      summary: Create Account
      operationId: createAccount
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric Id of User
      requestBody:
        description: Account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        "201":
          description: Account created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    get:
      tags:
        - account
      summary: Returns a list of account.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric Id of User
      description: Optional extended description in CommonMark or HTML
      responses:
        "200":
          description: A JSON array of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
        "204":
          description: no accounts

  /accounts:
    get:
      tags:
        - account
      summary: Returns a list of account.
      description: Optional extended description in CommonMark or HTML
      responses:
        "200":
          description: A JSON array of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
        "204":
          description: no accounts
    put:
      tags:
        - account
      summary: Update Account
      operationId: updateAccount
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric Id of Account
      requestBody:
        description: Updated account object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

      responses:
        "201":
          description: User is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "204":
          description: user not found
    delete:
      tags:
        - account
      summary: Delete Account
      operationId: deleteAccount
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric Id of Account
      responses:
        "200":
          description: user deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "204":
          description: user not found


components:
  schemas:
    User:
      required:
        - firstName
        - lastName
        - dateOfBirth
        - role
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        accounts:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Account'
        firstName:
          type: string
          minLength: 1
          maxLength: 20
          pattern: '\p{L}+'
          example: John
        lastName:
          type: string
          minLength: 1
          maxLength: 20
          pattern: '\p{L}+'
          example: James
        dateOfBirth:
          type: string
          format: date
          example: '1995-11-27'
        email:
          type: string
          example: example@mail.com
        password:
          type: string
          example: '12345'
          writeOnly: true
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          example: 1
        role:
          $ref: '#/components/schemas/Role'
        dateOfCreate:
          type: string
          format: date-time
          readOnly: true

      xml:
        name: user

    Account:
      type: object
      required:
        - userId
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        userId:
          type: integer
          format: int64
          readOnly: true
        amount:
          type: integer
          format: int64
        currency:
          type: string
          example: 'EUR'
        isMain:
          type: boolean
          example: true

    Role:
      type: string
      enum:
        - user
        - bank employee
        - admin




